import prettier from "eslint-plugin-prettier";
import react from "eslint-plugin-react";
import tseslint from "typescript-eslint";

export default {
  name: "eslint-config-5448c8",
  files: ["**/*.{js,jsx,mjs,cjs,ts,tsx}"],
  languageOptions: { parser: tseslint.parser, sourceType: "module", parserOptions: { ecmaFeatures: { jsx: true } } },
  plugins: { "@typescript-eslint": tseslint.plugin, react, prettier },
  rules: {
    "array-callback-return": "error",
    "constructor-super": "error",
    "for-direction": "error",
    "getter-return": "error",
    "no-async-promise-executor": "error",
    "no-await-in-loop": "off",
    "no-class-assign": "error",
    "no-compare-neg-zero": "error",
    "no-cond-assign": ["error", "always"],
    "no-console": "off",
    "no-constant-condition": "error",
    "no-control-regex": "error",
    "no-debugger": "off",
    "no-dupe-args": "error",
    "no-dupe-keys": "error",
    "no-duplicate-case": "error",
    "no-empty": ["warn", { allowEmptyCatch: true }],
    "no-empty-character-class": "error",
    "no-ex-assign": "error",
    "no-extra-boolean-cast": "error",
    "no-extra-semi": "error",
    "no-func-assign": "error",
    "no-invalid-regexp": "error",
    "no-irregular-whitespace": "error",
    "no-misleading-character-class": "error",
    "no-obj-calls": "error",
    "no-prototype-builtins": "error",
    "no-regex-spaces": "error",
    "no-sparse-arrays": "error",
    "no-template-curly-in-string": "warn",
    "no-unexpected-multiline": "error",
    "no-unreachable": "warn", // allows for disabling code
    "no-unsafe-finally": "error",
    "no-unsafe-negation": "error",
    "require-atomic-updates": "off",
    "use-isnan": "error",
    "valid-typeof": "error",
    // Best Practices
    "accessor-pairs": "off",
    "block-scoped-var": "error",
    "class-methods-use-this": "off",
    complexity: 0,
    "consistent-return": "error",
    curly: ["error", "all"],
    "default-case": "warn",
    "dot-location": ["error", "property"],
    "dot-notation": "error",
    eqeqeq: ["error", "always"],
    "guard-for-in": "error",
    "max-classes-per-file": "off",
    "no-alert": "error",
    "no-caller": "warn",
    "no-case-declarations": "error",
    "no-div-regex": "error",
    "no-else-return": ["error", { allowElseIf: false }],
    "no-empty-pattern": "error",
    "no-eq-null": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-fallthrough": "error",
    "no-floating-decimal": "error",
    "no-global-assign": "error",
    "no-implicit-coercion": "off",
    "no-implied-eval": "error",
    "no-invalid-this": "off",
    "no-iterator": "error",
    "no-lone-blocks": "error",
    "no-multi-spaces": "error",
    "no-multi-str": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-require": "error",
    "no-new-wrappers": "error",
    "no-octal": "error",
    "no-octal-escape": "error",
    "no-param-reassign": "off",
    "no-proto": "error",
    "no-path-concat": "error",
    "no-redeclare": "error",
    "no-restricted-properties": "error",
    "no-return-assign": "error",
    "max-len": "off",
    "no-restricted-syntax": ["error", "LabeledStatement", "WithStatement"],
    quotes: [
      "error",
      "double",
      {
        avoidEscape: true,
      },
    ],
    "func-call-spacing": ["error", "never"],
    "func-names": ["error", "as-needed"],
    "comma-spacing": [
      "error",
      {
        after: true,
      },
    ],
    "quote-props": ["error", "as-needed"],
    "prefer-const": "error",
    "prefer-spread": "error",
    "prefer-rest-params": "error",
    "prefer-arrow-callback": "error",
    "prefer-destructuring": [
      "error",
      {
        // https://github.com/xojs/eslint-config-xo/blob/06e4e1416bdbf2df56984adca8039683ebad735c/esnext.js#L28
        VariableDeclarator: {
          array: false,
          object: true,
        },
        AssignmentExpression: {
          array: false,
          object: false,
        },
      },
    ],
    "no-var": "error",
    "no-this-before-super": "error",
    "object-shorthand": "error",
    "prettier/prettier": [
      "error",
      {
        trailingComma: "es5",
        printWidth: 120,
        semi: true,
        jsxBracketSameLine: true,
        arrowParens: "always",
        endOfLine: "lf",
        singleQuote: false,
      },
    ],
    "padding-line-between-statements": [
      "error",
      {
        blankLine: "always",
        prev: "*",
        next: ["export", "cjs-export"],
      },
      {
        blankLine: "never",
        prev: ["export", "cjs-export"],
        next: ["export", "cjs-export"],
      },
      {
        blankLine: "always",
        prev: ["import", "cjs-import"],
        next: "*",
      },
      {
        blankLine: "never",
        prev: ["import", "cjs-import"],
        next: ["import", "cjs-import"],
      },
      {
        blankLine: "always",
        prev: "multiline-block-like",
        next: "*",
      },
    ],
    "sort-imports": ["error"],

    "@typescript-eslint/adjacent-overload-signatures": "error",
    "@typescript-eslint/array-type": [
      "error",
      {
        default: "array-simple",
      },
    ],
    camelcase: "off",
    "@typescript-eslint/naming-convention": "off",
    "@typescript-eslint/explicit-function-return-type": "off",
    "@typescript-eslint/no-misused-new": "error",
    "no-empty-function": "off",
    "no-extra-parens": "off",
    "no-unused-vars": "off",
    "@typescript-eslint/no-unused-vars": [
      "warn",
      {
        vars: "all",
        args: "after-used",
        ignoreRestSiblings: true,
        argsIgnorePattern: "^_",
        caughtErrors: "all",
        caughtErrorsIgnorePattern: "^_",
      },
    ],
    "@typescript-eslint/no-use-before-define": "error",
    "@typescript-eslint/no-useless-constructor": "error",
    "@typescript-eslint/require-array-sort-compare": "error",
    "react/jsx-curly-brace-presence": [
      "error",
      {
        props: "always",
        children: "ignore",
      },
    ],
    "react/destructuring-assignment": ["error", "always", { ignoreClassFields: true }],
    "react/display-name": ["warn"],
    "react/no-access-state-in-setstate": ["error"],
    "react/no-array-index-key": ["error"],
    "react/no-children-prop": ["error"],
    "react/no-danger": ["error"],
    "react/no-deprecated": ["error"],
    "react/no-did-update-set-state": ["error"],
    "react/no-direct-mutation-state": ["error"],
    "react/no-find-dom-node": ["error"],
    "react/no-redundant-should-component-update": ["error"],
    "react/no-typos": ["warn"],
    "react/no-string-refs": ["error"],
    "react/no-this-in-sfc": ["error"],
    "react/no-unescaped-entities": ["error"],
    "react/no-unknown-property": ["error"],
    "react/no-unsafe": ["error"],
    "react/no-will-update-set-state": ["error"],
    "react/prefer-es6-class": ["error", "always"],
    "react/prefer-stateless-function": ["error"],
    "react/require-render-return": ["error"],
    "react/self-closing-comp": ["error", { component: true, html: true }],
    "react/sort-comp": [
      "warn",
      {
        order: ["static-methods", "instance-variables", "lifecycle", "everything-else", "render"],
      },
    ],
    "react/style-prop-object": ["error"],
    "react/prop-types": ["off"],
    "react/void-dom-elements-no-children": ["error"],
    "react/react-in-jsx-scope": ["off"],
  },
};
